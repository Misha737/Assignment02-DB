With USE INDEX
-> Limit: 50 row(s)  (actual time=190064..190064 rows=50 loops=1)
    -> Sort: e2.WhiteWins DESC, AvgOpponentEloInSameOpening DESC  (actual time=190064..190064 rows=50 loops=1)
        -> Table scan on <temporary>  (cost=2.5..2.5 rows=0) (actual time=190064..190064 rows=356 loops=1)
            -> Temporary table  (cost=0..0 rows=0) (actual time=190064..190064 rows=356 loops=1)
                -> Window multi-pass aggregate with buffering: avg(games.BlackElo) OVER (PARTITION BY e1.Opening ORDER BY e1.UTCDate RANGE BETWEEN INTERVAL 1 year  PRECEDING AND CURRENT ROW)   (actual time=190062..190064 rows=356 loops=1)
                    -> Sort: e1.Opening, e1.UTCDate  (actual time=190061..190062 rows=356 loops=1)
                        -> Stream results  (cost=2.33e+6 rows=0) (actual time=181257..190061 rows=356 loops=1)
                            -> Nested loop inner join  (cost=2.33e+6 rows=0) (actual time=181257..190060 rows=356 loops=1)
                                -> Nested loop inner join  (cost=2.32e+6 rows=0) (actual time=4482..13284 rows=360 loops=1)
                                    -> Nested loop inner join  (cost=2.32e+6 rows=20.7e+6) (actual time=3809..12611 rows=439 loops=1)
                                        -> Filter: ((e1.Variant = 'Standard') and (e1.BlackTitle = 'GM') and (e1.WhiteTitle = 'GM') and (e1.TimeControl like '600+%') and (e1.Termination <> 'Time forfeit') and (e1.White is not null) and (e1.ECO is not null))  (cost=250892 rows=45.6) (actual time=88.3..8885 rows=439 loops=1)
                                            -> Table scan on e1  (cost=250892 rows=456439) (actual time=0.421..8624 rows=709496 loops=1)
                                        -> Index lookup on e3 using <auto_key0> (White=e1.White, Eco=e1.ECO)  (cost=136665..136667 rows=10) (actual time=8.49..8.49 rows=1 loops=439)
                                            -> Materialize CTE uniqueopponentswithsameeco  (cost=136664..136664 rows=453763) (actual time=3720..3720 rows=479896 loops=1)
                                                -> Group aggregate: count(distinct games.Black)  (cost=91288 rows=453763) (actual time=0.181..1584 rows=479896 loops=1)
                                                    -> Covering index skip scan for deduplication on games using white_eco_black_index  (cost=45644 rows=456440) (actual time=0.0227..1280 rows=689257 loops=1)
                                    -> Covering index lookup on popular_openings using <auto_key0> (ECO=e1.ECO)  (cost=0.25..2.5 rows=10) (actual time=1.53..1.53 rows=0.82 loops=439)
                                        -> Materialize  (cost=0..0 rows=0) (actual time=673..673 rows=154 loops=1)
                                            -> Filter: (`count(0)` > 1000)  (actual time=673..673 rows=154 loops=1)
                                                -> Table scan on <temporary>  (actual time=673..673 rows=497 loops=1)
                                                    -> Aggregate using temporary table  (actual time=673..673 rows=497 loops=1)
                                                        -> Covering index scan on games using white_eco_black_index  (cost=250892 rows=456439) (actual time=0.0119..359 rows=709496 loops=1)
                                -> Index lookup on e2 using <auto_key0> (White=e1.White)  (cost=253935..253937 rows=10) (actual time=491..491 rows=0.989 loops=360)
                                    -> Materialize CTE whitewins  (cost=253935..253935 rows=15213) (actual time=176775..176775 rows=4388 loops=1)
                                        -> Group aggregate: count(0)  (cost=252413 rows=15213) (actual time=51.5..176716 rows=4388 loops=1)
                                            -> Filter: ((games.Result = '1-0') and (games.WhiteElo > 2400))  (cost=250892 rows=15213) (actual time=44.7..176637 rows=53783 loops=1)
                                                -> Index scan on games using white_eco_black_index  (cost=250892 rows=456439) (actual time=0.754..175390 rows=709496 loops=1)

With FORCE INDEX
-> Limit: 50 row(s)  (actual time=194811..194811 rows=50 loops=1)
    -> Sort: e2.WhiteWins DESC, AvgOpponentEloInSameOpening DESC  (actual time=194811..194811 rows=50 loops=1)
        -> Table scan on <temporary>  (cost=2.5..2.5 rows=0) (actual time=194810..194810 rows=356 loops=1)
            -> Temporary table  (cost=0..0 rows=0) (actual time=194810..194810 rows=356 loops=1)
                -> Window multi-pass aggregate with buffering: avg(games.BlackElo) OVER (PARTITION BY e1.Opening ORDER BY e1.UTCDate RANGE BETWEEN INTERVAL 1 year  PRECEDING AND CURRENT ROW)   (actual time=194808..194810 rows=356 loops=1)
                    -> Sort: e1.Opening, e1.UTCDate  (actual time=194808..194808 rows=356 loops=1)
                        -> Stream results  (cost=2.33e+6 rows=0) (actual time=185308..194807 rows=356 loops=1)
                            -> Nested loop inner join  (cost=2.33e+6 rows=0) (actual time=185308..194807 rows=356 loops=1)
                                -> Nested loop inner join  (cost=2.32e+6 rows=0) (actual time=4354..13852 rows=360 loops=1)
                                    -> Nested loop inner join  (cost=2.32e+6 rows=20.7e+6) (actual time=3685..13182 rows=439 loops=1)
                                        -> Filter: ((e1.Variant = 'Standard') and (e1.BlackTitle = 'GM') and (e1.WhiteTitle = 'GM') and (e1.TimeControl like '600+%') and (e1.Termination <> 'Time forfeit') and (e1.White is not null) and (e1.ECO is not null))  (cost=250892 rows=45.6) (actual time=86.3..9578 rows=439 loops=1)
                                            -> Table scan on e1  (cost=250892 rows=456439) (actual time=0.457..9299 rows=709496 loops=1)
                                        -> Index lookup on e3 using <auto_key0> (White=e1.White, Eco=e1.ECO)  (cost=136665..136667 rows=10) (actual time=8.21..8.21 rows=1 loops=439)
                                            -> Materialize CTE uniqueopponentswithsameeco  (cost=136664..136664 rows=453763) (actual time=3599..3599 rows=479896 loops=1)
                                                -> Group aggregate: count(distinct games.Black)  (cost=91288 rows=453763) (actual time=0.782..1555 rows=479896 loops=1)
                                                    -> Covering index skip scan for deduplication on games using white_eco_black_index  (cost=45644 rows=456440) (actual time=0.649..1251 rows=689257 loops=1)
                                    -> Covering index lookup on popular_openings using <auto_key0> (ECO=e1.ECO)  (cost=0.25..2.5 rows=10) (actual time=1.52..1.52 rows=0.82 loops=439)
                                        -> Materialize  (cost=0..0 rows=0) (actual time=669..669 rows=154 loops=1)
                                            -> Filter: (`count(0)` > 1000)  (actual time=669..669 rows=154 loops=1)
                                                -> Table scan on <temporary>  (actual time=669..669 rows=497 loops=1)
                                                    -> Aggregate using temporary table  (actual time=669..669 rows=497 loops=1)
                                                        -> Covering index scan on games using white_eco_black_index  (cost=250892 rows=456439) (actual time=0.0298..357 rows=709496 loops=1)
                                -> Index lookup on e2 using <auto_key0> (White=e1.White)  (cost=505127..505129 rows=10) (actual time=503..503 rows=0.989 loops=360)
                                    -> Materialize CTE whitewins  (cost=505127..505127 rows=15213) (actual time=180954..180954 rows=4388 loops=1)
                                        -> Group aggregate: count(0)  (cost=503605 rows=15213) (actual time=106..180893 rows=4388 loops=1)
                                            -> Filter: ((games.Result = '1-0') and (games.WhiteElo > 2400))  (cost=502084 rows=15213) (actual time=95.9..180800 rows=53783 loops=1)
                                                -> Index scan on games using white_eco_black_index  (cost=502084 rows=456439) (actual time=10.5..179260 rows=709496 loops=1)

With STRAIGHT_JOIN
-> Limit: 50 row(s)  (actual time=14696..14696 rows=50 loops=1)
    -> Sort: e2.WhiteWins DESC, AvgOpponentEloInSameOpening DESC  (actual time=14696..14696 rows=50 loops=1)
        -> Table scan on <temporary>  (cost=2.5..2.5 rows=0) (actual time=14696..14696 rows=356 loops=1)
            -> Temporary table  (cost=0..0 rows=0) (actual time=14696..14696 rows=356 loops=1)
                -> Window multi-pass aggregate with buffering: avg(games.BlackElo) OVER (PARTITION BY e1.Opening ORDER BY e1.UTCDate RANGE BETWEEN INTERVAL 1 year  PRECEDING AND CURRENT ROW)   (actual time=14694..14696 rows=356 loops=1)
                    -> Sort: e1.Opening, e1.UTCDate  (actual time=14694..14694 rows=356 loops=1)
                        -> Stream results  (cost=274969 rows=0) (actual time=4954..14693 rows=356 loops=1)
                            -> Nested loop inner join  (cost=274969 rows=0) (actual time=4954..14693 rows=356 loops=1)
                                -> Nested loop inner join  (cost=252147 rows=0) (actual time=1018..10752 rows=356 loops=1)
                                    -> Nested loop inner join  (cost=251006 rows=0) (actual time=836..10569 rows=360 loops=1)
                                        -> Filter: ((e1.Variant = 'Standard') and (e1.BlackTitle = 'GM') and (e1.WhiteTitle = 'GM') and (e1.TimeControl like '600+%') and (e1.Termination <> 'Time forfeit') and (e1.ECO is not null) and (e1.White is not null))  (cost=250892 rows=45.6) (actual time=84.8..9816 rows=439 loops=1)
                                            -> Table scan on e1  (cost=250892 rows=456439) (actual time=0.428..9540 rows=709496 loops=1)
                                        -> Covering index lookup on popular_openings using <auto_key0> (ECO=e1.ECO)  (cost=0.252..2.52 rows=10) (actual time=1.71..1.71 rows=0.82 loops=439)
                                            -> Materialize  (cost=0..0 rows=0) (actual time=751..751 rows=154 loops=1)
                                                -> Filter: (`count(0)` > 1000)  (actual time=751..751 rows=154 loops=1)
                                                    -> Table scan on <temporary>  (actual time=751..751 rows=497 loops=1)
                                                        -> Aggregate using temporary table  (actual time=751..751 rows=497 loops=1)
                                                            -> Covering index scan on games using white_eco_black_index  (cost=250892 rows=456439) (actual time=0.166..418 rows=709496 loops=1)
                                    -> Index lookup on e2 using <auto_key0> (White=e1.White)  (cost=0.25..2.5 rows=10) (actual time=0.509..0.509 rows=0.989 loops=360)
                                        -> Materialize CTE whitewins  (cost=0..0 rows=0) (actual time=182..182 rows=4388 loops=1)
                                            -> Table scan on <temporary>  (actual time=176..177 rows=4388 loops=1)
                                                -> Aggregate using temporary table  (actual time=176..176 rows=4388 loops=1)
                                                    -> Filter: ((games.Result = '1-0') and (games.WhiteElo > 2400))  (cost=57056 rows=22822) (actual time=0.131..140 rows=53783 loops=1)
                                                        -> Covering index range scan on games using elo_result_white_index over (2400 < WhiteElo)  (cost=57056 rows=228219) (actual time=0.026..123 rows=122568 loops=1)
                                -> Index lookup on e3 using <auto_key0> (White=e1.White, Eco=e1.ECO)  (cost=136665..136669 rows=20) (actual time=11.1..11.1 rows=1 loops=356)
                                    -> Materialize CTE uniqueopponentswithsameeco  (cost=136664..136664 rows=453763) (actual time=3936..3936 rows=479896 loops=1)
                                        -> Group aggregate: count(distinct games.Black)  (cost=91288 rows=453763) (actual time=0.465..1651 rows=479896 loops=1)
                                            -> Covering index skip scan for deduplication on games using white_eco_black_index  (cost=45644 rows=456440) (actual time=0.307..1314 rows=689257 loops=1)
